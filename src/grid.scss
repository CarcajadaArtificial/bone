//    ___     _    _
//   / __|_ _(_)__| |
//  | (_ | '_| / _` |
//   \___|_| |_\__,_|
//
// =====================================================================================================
@use 'sass:map';
@use 'sass:math';
@use 'sass:list';
@use 'throw';
@use 'utils' as *;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/// The x() function simplifies the multiplication of the basic unit. Instead of writing `$u * .5`, one can use `x(.5)`
///
/// @param {unitless} $mult
///
/// @returns $u * $mult
///
/// @todo validate $mult is a unitless number
///
/// @group grid
@function x($mult) {
  @return $u * $mult;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/// The $u variable is a value that represent the basic unit of measurement for layouts.
///
/// @type em
///
/// @group grid
$u: 1.5em !default;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
$grid-schemas: () !default;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
$layout-schemas: () !default;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
@mixin build-grid($schemas: $grid-schemas) {
  .grid {
    display: grid;
    @each $name, $schema in $schemas {
      @include quick-mediaquery(map-get($schema, mq)) {
        @if map-get($schema, fixedcol) == true {
          @include grid-schema(
            $cols: map-get($schema, cols),
            $gutter: map-get($schema, gutter),
            $colwidth: map-get($schema, colwidth),
            $fixedcol: true
          );
        } @else {
          @include grid-schema(
            $cols: map-get($schema, cols),
            $gutter: map-get($schema, gutter),
            $colwidth: map-get($schema, colwidth),
            $fixedcol: false,
            $width: map-get($schema, width),
            $margin: map-get($schema, margin)
          );
        }
      }
    }
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
@mixin grid-schema(
  $cols,
  $gutter,
  $colwidth,
  $fixedcol,
  $width: min-content,
  $margin: auto
) {
  gap: $gutter;
  width: $width;
  margin: 0 $margin;

  @if $fixedcol == true {
    grid-template-columns: repeat($cols, minmax($colwidth, $colwidth));
  } @else {
    grid-template-columns: repeat($cols, minmax($colwidth, 1fr));
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
@mixin build-layouts($schemas: $layout-schemas) {
  @each $name, $schema in $schemas {
    .layout-#{$name} {
      .layout-module {
        @include grid-column(map-get($schema, span), map-get($schema, offset));
        @include layout-variations(map-get($schema, variations));
      }
    }
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
///
/// @group grid
///
@mixin layout-variations($variations) {
  @each $variation in $variations {
    @include quick-mediaquery(map-get($variation, mq)) {
      @include quick-pseudoclass(map-get($variation, pseudo)) {
        @include grid-column(
          map-get($variation, span),
          map-get($variation, offset)
        );
      }
    }
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/// Change to false to avoid automatic css generation on this module.
///
/// @type bool
///
/// @group grid
///
$automatic-css-generation: true !default;

// =====================================================================================================
// Automatic CSS generation
// =====================================================================================================
/// Generates grid and layout classes.
///
/// @group grid
///
@if $automatic-css-generation {
  @include build-grid();
  @include build-layouts();
}
