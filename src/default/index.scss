//   ___       __           _ _                  __ _                    _   _
//  |   \ ___ / _|__ _ _  _| | |_   __ ___ _ _  / _(_)__ _ _  _ _ _ __ _| |_(_)___ _ _
//  | |) / -_)  _/ _` | || | |  _| / _/ _ \ ' \|  _| / _` | || | '_/ _` |  _| / _ \ ' \
//  |___/\___|_| \__,_|\_,_|_|\__| \__\___/_||_|_| |_\__, |\_,_|_| \__,_|\__|_\___/_||_|
//                                                   |___/
// =====================================================================================================
@use '../index.scss' as *;
@use 'color.default' as *;
@use 'media-queries.default' as *;
@use 'grid.default' as *;
@use 'reset.default' as *;
@use 'basics.default' as *;
@use 'sass:map';
@use '../../lib/sass-door' as *;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// CSS Building
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// CSS Building using this library has important order implications.
@include build-reset();
:root {
  @include build-dual-theme($palette, 'limon', 'obsidiana', 'papel');
  @include build-sizes(0, 6, 1rem, 'major-third');
  @include build-box-spaces();
  @media #{map.get($query-map, 'only-sm')} {
    @include build-sizes(0, 6, 1rem, 'minor-third');
  }
}
@include build-grid($grid-schemas);
@include build-layout(map.get($layout-schemas, 'focus'));
@include build-semantic-elements();
@include build-type-elements();
@include build-input-elements();
